"use strict";const Web3Modal=window.Web3Modal.default,WalletConnectProvider=window.WalletConnectProvider.default,evmChains=window.evmChains;let web3Modal,provider,walletAddress,w3inst;const infuraKey="eb00f2946b40463a9e6d6fea08b2b6d7";function initWeb3(app_name="mint"){const providerOptions={walletconnect:{package:WalletConnectProvider,options:{infuraId:infuraKey,pollingInterval:6e4}},coinbasewallet:{package:CoinbaseWalletSDK,options:{appName:app_name,infuraId:infuraKey,darkMode:!1}}};web3Modal=new Web3Modal({network:"mainnet",cacheProvider:!0,providerOptions:providerOptions,disableInjectedProvider:!1})}
async function refreshAccountData(callback){const conEl=document.getElementById("connect-div");const disEl=document.getElementById("disconnect-div");console.log("IN REFRESH")
conEl.classList.remove("hide"),disEl.classList.contains("hide")||disEl.classList.add("hide"),w3inst=new Web3(provider);const chainId=await w3inst.eth.getChainId();if(chainId!=1)return void alert("Please switch networks");const accounts=await w3inst.eth.getAccounts();console.log("Got accounts",accounts)
walletAddress=accounts[0];callback();console.log("After callback")
conEl.classList.add("hide")
disEl.classList.remove("hide")}
async function onConnect(callback){console.log("Opening a dialog",web3Modal);try{provider=await web3Modal.connect()}catch(e){return void console.log("Could not get a wallet connection",e)}
provider.on("accountsChanged",accounts=>{refreshAccountData(callback)}),provider.on("chainChanged",chainId=>{refreshAccountData(callback)}),await refreshAccountData(callback)}
async function onDisconnect(){const conEl=document.getElementById("connect-div");const disEl=document.getElementById("disconnect-div");await web3Modal.clearCachedProvider(),provider.disconnect&&(await provider.disconnect(),provider=null,w3inst=null),walletAddress=null,conEl.classList.remove("hide"),disEl.classList.add("hide")}